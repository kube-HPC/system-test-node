{
    "name": "randomPipeStored",
    "nodes": [{
            "nodeName": "add0",
            "algorithmName": "eval-alg",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total += item\n        }\n        return total\n\n    }"
                ]
            },
            "input": [
                3,
                5
            ]
        },
        {
            "nodeName": "batch1",
            "algorithmName": "eval-alg5",
            "extraData": {
                "code": [
                    "(input) => {\n        const arr = []\n        const min = Math.floor(Math.random() * input[0])\n        const max = Math.floor(Math.random() * input[0]) + min\n        for (let i = min; i < max; i++) {\n            arr.push(i)\n        }\n        return arr\n    }"
                ]
            },
            "input": [
                3
            ]
        },
        {
            "nodeName": "add2",
            "algorithmName": "eval-alg2",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total += item\n        }\n        return total\n\n    }"
                ]
            },
            "input": [
                3,
                "@add0"
            ]
        },
        {
            "nodeName": "add3",
            "algorithmName": "eval-alg3",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total += item\n        }\n        return total\n\n    }"
                ]
            },
            "input": [
                3,
                "@add0",
                "@batch1"
            ]
        },
        {
            "nodeName": "batch4",
            "algorithmName": "eval-alg",
            "extraData": {
                "code": [
                    "(input) => {\n        const arr = []\n        const min = Math.floor(Math.random() * input[0])\n        const max = Math.floor(Math.random() * input[0]) + min\n        for (let i = min; i < max; i++) {\n            arr.push(i)\n        }\n        return arr\n    }"
                ]
            },
            "input": [
                "#[885,1211,1336,1719,1729,1631,1004,350,838,627,1280,839,1611,364,1820,809,1963,896,1699,101,668,420,1290,1208,665,324,1086,807,1180,309,1717,1413,1036,1819,1463,1617,1260,1791,376,1532,46,1676,1755,1465,1630,1280,1691,1812,1904,691,983,49,454,6,404,218,1092,1233,927,842,148,1922,1474,1929,1081,1148,710,858,502,948,1078,1957,257,1762,939,963,349,1784,1947,896,1722,307,595,1800,101,1484,1859,1328,1461,528,1699,1638,1488,434,434,130,1964,512,333,1345,285,311,1261,651,154,1149,1346,1449,657,694,1302,1150,1244,37,1841,441,76,1652,430,779,1697,1066,1642,510,190,1763,1683,620,641,32,772,1003,1552,633,513,286,357,1921,887,1130,864,836,676,1634,108,208,1451,1921,647,1662,925,1310,508,184,909,1778,1392,661,444,612,398,1088,1111,18,1332,954,1868,883,1209,1650,717,629,1108,1721,1036,839,910,1889,1494,1767,857,323,371,278,1315,498,1763,122,1078,1850,1489,1441,514,1874,1562,1999,1309,1553,455,1154,888,1199,1453,1375,682,1559,1487,1485,1593,432,1747,1662,1921,926,219,219,205,23,658,1833,939,1680,1048,42,1631,569,123,493,585,1986,866,709,1588,705,1932,928,1732,1788,572,1595,1869,1716,754,1047,639,1651,1138,620,1232,1544,162,1775,1486,1731,1937,216,1566,9,982,1487,1858,1899,1933,289,799,1333,305,1005,1614,1251,672,1037,1316,1659,1029,1228,1617,1414,366,433,297,857,1320,1697,957,436,781,543,1740,1366,1532,186,279,664,1038,1207,377,1331,1942,1056,1783,1722,871,127,844,593,1987,921,1085,1026,1741,1129,1468,1447,72,668,659,1169,179,1883,1956,507,1782,1969,1155,1883,1396,261,1947,1127,71,215,1212,1727,1052,886,1540,76,680,1780,1300,1231,1810,1603,1996,248,1217,1556,254,738,1889,829,1137,731,1010,78,1530,1929,1917,972,571,1065,1969,1071,759,948,1621,1854,379,1517,1997,1709,186,1757,680,972,537,1503,804,1144,486,1768,248,1948,1337,835,1250,24,496,1465,456,1572,435,888,36,1520,103,895,552,42,830,693,973,390,1269,1605,82,177,1909,1109,599,1664,165,1244,1127,405,1973,860,308,982,627,914,1189,1210,1637,40,489,1473,1989,215,728,242,1633,123,1346,1986,46,694,293,1861,1036,1290,1206,1273,844,182,30,639,194,1751,1543,713,676,1518,894,1721,263,1715,1841,1619,1263,301,1480,1274,745,55,1813,1091,435,1289,1289,1079,843,1441,920,1365,1579,1316,1307,1818,290,1595,1654,1772,1897,1344,1779,453,626,927,1805,493,1622,938,1020,772,784,1967,215,1562,767,27,1176,1712,858,212,1652,12,831,1799,630,1017,1596,892,1311,1739,895,1221,209,1546,974,1240,1175,1838,1520,1194,1864,88,1985,903,1053,1605,1243,1548,681,1809,113,928,1555,874,1612,521,489,574,52,1006,1035,438,477,1836,1179,1427,328,582,1244,1604,1406,165,419,1173,1897,285,397,249,1140,525,1706,1610,1474,1283,655,954,132,1626,1233,1791,1507,1841,1319,478,1054,1942,701,657,114,485,330,1169,207,1963,1854,1490,1390,1479,1565,1526,1522,1812,223,1281,972,972,637,61,325,1436,1742,718,1587,428,1311,1808,915,1816,1236,512,969,277,1635,515,1513,651,1545,1287,1530,1898,85,1361,808,829,122,591,512,784,1595,1255,715,1366,418,1963,966,268,8,1573,1301,201,1596,1505,1721,1586,1870,1500,1608,985,1365,858,988,1500,495,1111,1321,452,411,451,868,1309,1911,321,1424,688,991,823,853,1524,663,841,652,9,1325,128,413,1917,1048,264,528,277,1522,1223,959,1123,1349,138,409,299,328,1854,1170,1113,1355,1541,212,1960,1585,208,1202,1643,1209,1816,102,489,258,924,306,1594,1470,1849,423,723,787,87,1301,1708,1979,1332,1069,1953,1360,998,189,688,1086,28,1840,773,1240,600,976,546,98,885,271,506,26,682,658,1414,1203,1384,284,49,978,1637,1586,1573,1211,1928,1914,1499,284,822,964,95,902,897,274,498,835,1126,314,337,705,137,863,419,1638,44,1899,552,1416,932,1943,137,1559,1819,1061,729,690,1139,998,1049,1827,439,271,1455,1780,296,1131,1332,1633,1961,1208,961,1953,1534,88,833,1622,1714,608,474,1752,122,502,1647,346,1686,753,38,765,1233,400,766,1573,430,1839,416,80,227,699,1940,167,255,966,1108,1145,731,97,999,916,1545,115,1907,1132,884,426,1239,1487,695,1185,1678,452,1922,415,1639,1054,71,242,730,351,1751,721,1776,146,43,1810,1163,704,1271,482,1557,1127,1143,1624,1131,502,700,1674,493,782,1343,663,1103,1538,664,58,1660,494,53,874,905,1296,728,1538,246,1380,1358,1560,830,716,1768,1608,784,1394,1623,1426,169,8,1428,929,1617]",
                "@add2"
            ]
        },
        {
            "nodeName": "sub5",
            "algorithmName": "eval-alg3",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total -= item\n        }\n        return total\n    }"
                ]
            },
            "input": [
                3,
                "@add0",
                "@batch1"
            ]
        },
        {
            "nodeName": "add6",
            "algorithmName": "eval-alg5",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total += item\n        }\n        return total\n\n    }"
                ]
            },
            "input": [
                3,
                "@add0"
            ]
        },
        {
            "nodeName": "sub7",
            "algorithmName": "eval-alg4",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total -= item\n        }\n        return total\n    }"
                ]
            },
            "input": [
                3,
                "@add0"
            ]
        },
        {
            "nodeName": "add8",
            "algorithmName": "eval-alg4",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total += item\n        }\n        return total\n\n    }"
                ]
            },
            "input": [
                3,
                "@add0",
                "@add2",
                "@sub5",
                "@add2",
                "@add0",
                "@sub5",
                "@add3"
            ]
        },
        {
            "nodeName": "add9",
            "algorithmName": "eval-alg5",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total += item\n        }\n        return total\n\n    }"
                ]
            },
            "input": [
                3,
                "@add0"
            ]
        },
        {
            "nodeName": "batch10",
            "algorithmName": "eval-alg3",
            "extraData": {
                "code": [
                    "(input) => {\n        const arr = []\n        const min = Math.floor(Math.random() * input[0])\n        const max = Math.floor(Math.random() * input[0]) + min\n        for (let i = min; i < max; i++) {\n            arr.push(i)\n        }\n        return arr\n    }"
                ]
            },
            "input": [
                3,
                "@add0",
                "@add0",
                "@add0",
                "@add0"
            ]
        },
        {
            "nodeName": "sub11",
            "algorithmName": "eval-alg4",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total -= item\n        }\n        return total\n    }"
                ]
            },
            "input": [
                3,
                "@add0",
                "@add0",
                "@add0",
                "@batch1"
            ]
        },
        {
            "nodeName": "sub12",
            "algorithmName": "eval-alg4",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 0\n\n        for (let item of input) {\n            total -= item\n        }\n        return total\n    }"
                ]
            },
            "input": [
                3
            ]
        },
        {
            "nodeName": "mult13",
            "algorithmName": "eval-alg5",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 1\n\n        for (let item of input) {\n            total *= item\n        }\n        return total\n    }"
                ]
            },
            "input": [
                3,
                "@add6",
                "@add6",
                "@batch4",
                "@add6",
                "@sub5",
                "@add2",
                "@add3",
                "@add0"
            ]
        },
        {
            "nodeName": "div14",
            "algorithmName": "eval-alg5",
            "extraData": {
                "code": [
                    "(input) => {\n        let total = 1\n\n        for (let item of input) {\n            total /= item\n        }\n        return total\n    }"
                ]
            },
            "input": [
                3,
                "@add2",
                "@batch1",
                "@batch1",
                "@add3"
            ]
        }
    ],
    "options": {
        "concurrentPipelines": 1
    },
    "priority": 3,
    "triggers": {
        "cron": {
            "pattern": "*/2 * * * *",
            "enabled": true
        }
    }
}